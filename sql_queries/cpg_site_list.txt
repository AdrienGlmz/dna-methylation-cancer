CREATE OR REPLACE TABLE __DATASET__.__CPG_SITE_TABLE_NAME__
AS

WITH
cpg_count_table AS (
SELECT CpG_probe_id, count(beta_value) as cpg_count, (SELECT count(distinct aliquot_barcode) FROM `dna_cancer_prediction.test_tcga_betas`) as participant_count
FROM `__DATASET__.__TCGA_BETAS_TABLE__`
GROUP BY CpG_probe_id
),

filter_cpg AS (
SELECT CpG_probe_id, cpg_count, participant_count
FROM cpg_count_table A
WHERE (cpg_count / participant_count)  >= 0.9
),

cpg_filtered AS (
SELECT A.CpG_probe_id, B.beta_value, B.sample_status
FROM filter_cpg A
LEFT JOIN `__DATASET__.__TCGA_BETAS_TABLE__` B
ON A.CpG_probe_id = B.CpG_probe_id
),

cpg_avg_beta AS (
SELECT CpG_probe_id, avg(beta_value) as global_beta_avg
FROM cpg_filtered
GROUP BY CpG_probe_id
),

cpg_avg_beta_tumor AS (
SELECT CpG_probe_id, avg(beta_value) as tumor_beta_avg
FROM cpg_filtered
WHERE sample_status = 'tumor'
GROUP BY CpG_probe_id
),

cpg_avg_beta_normal AS (
SELECT CpG_probe_id, avg(beta_value) as normal_beta_avg
FROM cpg_filtered
WHERE sample_status = 'normal'
GROUP BY CpG_probe_id
),

cpg_averages AS (
SELECT A.CpG_probe_id, A.global_beta_avg, COALESCE(B.tumor_beta_avg, A.global_beta_avg) as tumor_beta_avg, COALESCE(C.normal_beta_avg, A.global_beta_avg) as normal_beta_avg
FROM cpg_avg_beta A
LEFT JOIN cpg_avg_beta_tumor B ON A.CpG_probe_id = B.CpG_probe_id
LEFT JOIN cpg_avg_beta_normal C on A.CpG_probe_id = C.CpG_probe_id
),

cpg_variances AS (
SELECT CpG_probe_id, POWER((tumor_beta_avg - global_beta_avg), 2) + POWER((normal_beta_avg - global_beta_avg), 2) as sum_squares_between_groups
FROM cpg_averages
ORDER BY sum_squares_between_groups desc
)

SELECT CpG_probe_id
FROM cpg_variances
LIMIT 5000